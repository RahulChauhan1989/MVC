@model ViewModels.UpdateLocationViewModel

@{
    ViewBag.Title = "Edit Location";

    string faIcon = string.Format("<i class='fa fa-reply' aria-hidden='true'></i> Back");
    string hyperLink = Html.ActionLink("linkTitle", "ManageLocations", "Master", null, new { @class = "headerbacklink" }).ToString();
    ViewBag.TitleBackBtn = new HtmlString(hyperLink.ToString().Replace("linkTitle", faIcon));

}

@section LeftNavigation{ @Html.Partial("_NavLeftMaster") }
@section DisplayTitle{ @Html.Partial("_DisplayTitle") }
@section DisplayMandatory{ @Html.Partial("_DisplayMandatory") }
@section DisplayErrorMessage{ @Html.Partial("_DisplayErrorMessage") }

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="form-group branch">
                    @Html.LabelFor(model => model.CountryRowID, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.CountryRowID,
                            new SelectList(ViewBag.Countries, "CountryRowID", "CountryName"),
                            "-- Select Country -- ",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryRowID, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.StateRowID, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.StateRowID,
                     new SelectList(string.Empty, "Value", "Text"),
                     "-- Select State --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StateRowID, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.StateRowID, new { @id = "hdnStateRowID" })
                    </div>
                </div>
                <div class="form-group branch">
                    @Html.LabelFor(model => model.DistrictRowID, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.DistrictRowID,
                       new SelectList(string.Empty, "Value", "Text"),
                       "-- Select District --",
                       new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DistrictRowID, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.DistrictRowID, new { @id = "hdnDistrictRowID" })
                    </div>
                    @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.LocationRowID)
                    </div>
                </div>
                <div class="form-group branch">
                   
                    @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event,false)" } })
                        @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="all-button-bg">
                    @Html.ActionLink("Back", "ManageLocations", "Master", null, new { @class = "btn bun-bg btn-default" })
                    <input class="btn bun-bg btn-default" type="submit" value="Submit" />
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    <script src='@Url.Content("~/Scripts/jquery.validate.min.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")'></script>
    <script src='@Url.Content("~/Scripts/EventValidations.js")'></script>
    <script type="text/jscript">
        $(function () {
            //$(window).load(function () {
            $(document).ready(function () {
                $.getJSON('/Master/BindState/' + $('#CountryRowID').val(), function (data) {
                    var items = '<option  value="">-- Select State --</option>';
                    $.each(data, function (i, States) {
                        items += "<option value='" + States.Value + "'>" + States.Text + "</option>";
                    });
                    $('#StateRowID').html(items);
                    $('#StateRowID').val($('#hdnStateRowID').val());
                });
                $.getJSON('/Master/BindDistrict/' + $('#hdnStateRowID').val(), function (data) {
                    var items = '<option value="">-- Select District --</option>';
                    $.each(data, function (i, Districts) {
                        items += "<option value='" + Districts.Value + "'>" + Districts.Text + "</option>";
                    });
                    $('#DistrictRowID').html(items);
                    $('#DistrictRowID').val($('#hdnDistrictRowID').val());
                });               
            });
            $('#CountryRowID').change(function () {
                $.getJSON('/Master/BindState/' + $('#CountryRowID').val(), function (data) {
                    var items = '<option value="">-- Select State --</option>';
                    $.each(data, function (i, States) {
                        items += "<option value='" + States.Value + "'>" + States.Text + "</option>";
                    });
                    $('#StateRowID').html(items);
                    $('#DistrictRowID').val('');
                    $('#LocationName').val('');
                    $('#PinCode').val('');
                });
            });
            $('#StateRowID').change(function () {
                $.getJSON('/Master/BindDistrict/' + $('#StateRowID').val(), function (data) {
                    var items = '<option value="">-- Select District --</option>';
                    $.each(data, function (i, Districts) {
                        items += "<option value='" + Districts.Value + "'>" + Districts.Text + "</option>";
                    });
                    $('#DistrictRowID').html(items);
                    $('#LocationName').val('');
                    $('#PinCode').val('');
                });
            });
            $('#DistrictRowID').change(function () {
                $.getJSON('/Master/BindCity/' + $('#DistrictRowID').val(), function (data) {
                    var items = '<option value="">-- Select City --</option>';
                    $.each(data, function (i, Cities) {
                        items += "<option value='" + Cities.Value + "'>" + Cities.Text + "</option>";
                    });
                    $('#CityRowID').html(items);
                    $('#LocationName').val('');
                    $('#PinCode').val('');
                });
            });
          
        });
    </script>
}
