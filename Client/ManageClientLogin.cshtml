
@{
    ViewBag.Title = "Manage Client User";
}
@{
    string faIconAddNew = string.Format("<i class='fa fa-plus-circle' aria-hidden='true'></i> Add New Client User");
    string hyperLinkAddNew = Html.ActionLink("linkTitle", "AddClientLogin", "Client", null, new { @class = "btn bun-bg btn-default" }).ToString();
    ViewBag.NavigationBtnAddNew = new HtmlString(hyperLinkAddNew.ToString().Replace("linkTitle", faIconAddNew));

    //@ViewBag.NavigationBtnExportExcel
    string faIconExportExcel = string.Format("<i class='fa fa-file-excel-o' aria-hidden='true'></i> Export Excel");
    string hyperLinkExportExcel = Html.ActionLink("linkTitle", "ExportClientLogin", "Client", new { CId = Request.QueryString["CId"] }, new { @class = "btn bun-bg btn-default" }).ToString();
    ViewBag.NavigationBtnExportExcel = new HtmlString(hyperLinkExportExcel.ToString().Replace("linkTitle", faIconExportExcel));

}
            @section NavigationButton{ @Html.Partial("_NavigationButton") }
        @section LeftNavigation{ @Html.Partial("_NavLeftClient") }
        @section DisplayTitle{ @Html.Partial("_DisplayTitle") }
        @section DisplayErrorMessage{ @Html.Partial("_DisplayErrorMessage") }

<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-10">
                        @using (Html.BeginForm("ManageClientLogin", "Client", FormMethod.Get))
                        {
                            <div class="form-horizontal">
                                <div class="form-group branch search-frame">
                                    <label class="col-md-3 control-label">Enter Client :</label>
                                    <div class="col-md-5">
                                        @Html.TextBox("Search", null, new { @class = "form-control", placeholder = "Ex. User Id..." })
                                    </div>
                                    <div class="col-md-2">
                                        <input class="btn bun-bg btn-default" type="submit" value="Search" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>


                </div>
                @if (Model != null && Model.ClientUsers != null)
    {
                    <div class="row">
                        <div class="col-md-12">
                            @{

                                WebGrid grid = new WebGrid(rowsPerPage: Model.PageSize, ajaxUpdateContainerId: "grid");
    grid.Bind(Model.ClientUsers, autoSortAndPage: false, rowCount: Model.TotalRecords);

                            }
                            @grid.GetHtml(
                                    htmlAttributes: new { id = "grid", @class = "table" },
                                    headerStyle: "thead-inverse",
                                    rowStyle: "ordertxt",
                                    footerStyle: "custpaging",
                                    mode: WebGridPagerModes.All,
                                    columns: new[]
                                    {
                                    grid.Column(header: "S.No.", style:"", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex),
                                    grid.Column(columnName: "ClientName", header: "Client", canSort: true, style:"col-md-4"),
                                    grid.Column(columnName: "UserID", header: "User ID", canSort: false, style:"col-md-2"),
                                    grid.Column(columnName: "CreatedBy", header: "Created By", canSort: false, style:"col-md-2"),

                                    grid.Column(header: "Sent Mail", format: (item) => item.SentMailStatus == 1 ? "Yes" : "No", canSort: false, style:"col-md-1"),

                                    grid.Column("SentMailDate", "Sent Date", format: (item) => item.SentMailDate != null ? item.SentMailDate.ToString("dd-MM-yyyy") : "", canSort: false,style:"col-md-1"),

                                      grid.Column(header: "Active", canSort: false, format: (item) => {
                             string strActive=string.Empty;
                             if (item.Status == 1)
                                {
                                    strActive += "<input name="+ item.ClientUserRowID +" id="+ item.ClientUserRowID +" checked='true' type='checkbox' onchange='adchange(this)' />";
                                }
                             else if (item.Status == 3)
                                {
                                    strActive += "Blocked";
                                }
                             else
                                {
                                    strActive += "<input name="+ item.ClientUserRowID +" id="+ item.ClientUserRowID +" type='checkbox' onchange='adchange(this)' />";
                                }
                                return new HtmlString(strActive);
                         },style:"delete col-md-1"),

                                    grid.Column("", canSort: false, format: (item)=> {
                                        string DeleteLink = string.Format("<a href=\"#\" id=\"sendmail_{0}\" class=\"sendmail\" >{1}</a>", item.ClientUserRowID, "Send Mail");
                                        return new HtmlString(DeleteLink);
                                    }, style:"delete col-md-1"),

                                    grid.Column(header : "", format : (item) => {
                                        var link = Html.ActionLink("Edit", "EditClientLogin", "Client", new { id = item.ClientUserRowID }, null);
                                        return link;
                                    }, style:"edit col-md-1")
                                }
                            )
                            <div class="total-record">Total Records: @Model.TotalRecords</div>
                        </div>
                    </div>
                }                
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            // 1st replace first column header text with checkbox
            $("#grid th").each(function () {
                if ($.trim($(this).text().toString().toLowerCase()) === "{checkall}") {
                    $(this).text('');
                    $("<input/>", { type: "checkbox", id: "cbSelectAll", value: "" }).appendTo($(this));
                    //$(this).append("<span>Select All</span>");
                }
            });
            //2nd click event for header checkbox for select /deselect all
            $("#cbSelectAll").click(function () {
                var ischecked = this.checked;
                $('#grid').find("input:checkbox").each(function () {
                    this.checked = ischecked;
                });
            });
            //3rd click event for checkbox of each row
            $("input[name='ids']").click(function () {
                var totalRows = $("#grid td :checkbox").length;
                var checked = $("#grid td :checkbox:checked").length;
                if (checked == totalRows) {
                    $("#grid").find("input:checkbox").each(function () {
                        this.checked = true;
                    });
                }
                else {
                    $("#cbSelectAll").removeAttr("checked");
                }
            });
        });
        function adchange(ChkData) {
            var id = ChkData.id;
            var checkeds = ChkData.checked;
            var flag = "";
            if (ChkData.checked == true) {
                flag = confirm('Are you sure to Enable this Record ?');
            }
            if (ChkData.checked == false) {
                flag = confirm('Are you sure to Disable this Record ?');
            }
            if (id != "" && flag) {
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("ActiveClientLogin", "Client")',
                    data: { "id": id, "checkeds": checkeds },
                    dataType: "json",
                    beforeSend: function () { },
                    success: function (data) {
                        if (data.result == true) {
                            alert("Record Update Successfully!!");
                            setTimeout(function () { window.location.replace("ManageClientLogin"); }, 500);
                        }
                        else {
                            alert('There is some error');
                        }
                    }
                });
            }
            else {
                if (ChkData.checked == false) {
                    ChkData.checked = true;
                }
                else {
                    ChkData.checked = false;
                }
            }
        }

        $(".sendmail").on("click", function () {
            var str = $(this).attr("id").split("_");
            id = str[1];

            var flag = confirm('Do you want to send client login details?');
            if (id != "" && flag) {
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("SendMailToClient", "Client")',
                    data: { "id": id },
                    dataType: "json",
                    beforeSend: function () { },
                    success: function (data) {
                        if (data.result == true) {
                            alert("Login Details Sent Successfully!!");
                            setTimeout(function () { window.location.replace("ManageClientLogin"); }, 200);
                        }
                        else {
                            alert('There is some error');
                        }
                    }
                });
            }
        });

        @*$(".delete").on("click", function () {
            var str = $(this).attr("id").split("_");
            id = str[1];

            var flag = confirm('Do you want to Delete the Record ?');
            if (id != "" && flag) {
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("DeleteClientLogin", "Client")',
                    data: { "id": id },
                    dataType: "json",
                    beforeSend: function () { },
                    success: function (data) {
                        if (data.result == true) {
                            alert("Record Deleted Successfully!!");
                            setTimeout(function () { window.location.replace("ManageClientLogin"); }, 500);
                        }
                        else {
                            alert('There is some error');
                        }
                    }
                });
            }
        });*@
    </script>
}


