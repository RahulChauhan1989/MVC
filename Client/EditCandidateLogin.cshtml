@model ViewModels.CandidateViewModel.UpdatePQCandidateLoginViewModel

@{
    ViewBag.Title = "Edit Candidate User";
    string faIcon = string.Format("<i class='fa fa-reply' aria-hidden='true'></i> Back");
    string hyperLink = Html.ActionLink("linkTitle", "ManageCandidateLogin", "Client", null, new { @class = "headerbacklink" }).ToString();
    ViewBag.TitleBackBtn = new HtmlString(hyperLink.ToString().Replace("linkTitle", faIcon));
}


@section LeftNavigation{ @Html.Partial("_NavLeftClient") }
@section DisplayTitle{ @Html.Partial("_DisplayTitle") }
@section DisplayMandatory{ @Html.Partial("_DisplayMandatory") }
@section DisplayErrorMessage{ @Html.Partial("_DisplayErrorMessage") }

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.CandidateUserRowID);
            @Html.HiddenFor(model => model.ClientRowID, new { @id = "hdnClientRowId" })
            <div class="form-horizontal">                
                <div class="form-group branch">
                    @Html.LabelFor(model => model.ClientRowID, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ClientRowID,
                            new SelectList(ViewBag.Client, "ClientRowID", "ClientName"),
                            "-- Select Client -- ",
                            new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.ClientRowID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group branch">
                    @Html.LabelFor(model => model.CandidateName, htmlAttributes: new { @class = "col-md-2 control-label required " })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.CandidateName, new { htmlAttributes = new { @class = "date-picker form-control" } })
                        @Html.ValidationMessageFor(model => model.CandidateName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "col-md-2 control-label " })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.EmployeeID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group branch">
                    @Html.LabelFor(model => model.CandidateEmail, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.CandidateEmail, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.HiddenFor(model => model.CandidateEmail)
                        @Html.ValidationMessageFor(model => model.CandidateEmail, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.CantactNo, htmlAttributes: new { @class = "col-md-2 control-label " })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.CantactNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CantactNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group branch">
                    @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.HiddenFor(model => model.UserID)
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UPass, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.UPass, new { htmlAttributes = new { @class = "form-control", @type = "Password" } })
                        @Html.ValidationMessageFor(model => model.UPass, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group branch">
                    @Html.LabelFor(model => model.YTRApplicable, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.YTRApplicable,
                            new SelectList(ViewBag.AddYTRApplicableList, "Value", "Text"),
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.YTRApplicable, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "col-md-2 control-label required" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.UserType,
                            new SelectList(ViewBag.AddTypeList, "Value", "Text"),
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="all-button-bg">
                    @Html.ActionLink("Back", "ManageCandidateLogin", "Client", null, new { @class = "btn bun-bg btn-default" })
                    <input class="btn bun-bg btn-default" type="submit" value="Submit" />
                </div>
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="ManageSction" class="product-frame1"></div>
    </div>
</div>

@section Scripts{

    <script src='@Url.Content("~/Scripts/jquery.validate.min.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")'></script>
    <script src='@Url.Content("~/Scripts/EventValidations.js")'></script>
    

}


